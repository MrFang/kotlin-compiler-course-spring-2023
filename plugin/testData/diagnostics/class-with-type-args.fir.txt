FILE: class-with-type-args.kt
    public abstract class Foo<out T> : R|kotlin/Any| {
        public constructor<out T>(): R|Foo<T>| {
            super<R|kotlin/Any|>()
        }

        public abstract fun foo(): R|T|

    }
    @R|me/mrfang/transparent/Transparent|() @R|kotlin/jvm/JvmInline|() public final inline class Name : R|kotlin/Any| {
        public constructor(f: R|Foo<kotlin/String>|): R|Name| {
            super<R|kotlin/Any|>()
        }

        private final val f: R|Foo<kotlin/String>| = R|<local>/f|
            private get(): R|Foo<kotlin/String>|

        public final fun hashCode(): R|kotlin/Int| {
            ^hashCode R|/Name.f|.R|kotlin/Any.hashCode|()
        }

        public final fun equals(other: R|kotlin/Any?|): R|kotlin/Boolean| {
            ^equals R|/Name.f|.R|kotlin/Any.equals|(R|<local>/other|)
        }

        public final fun toString(): R|kotlin/String| {
            ^toString R|/Name.f|.R|kotlin/Any.toString|()
        }

        public final fun foo(): R|kotlin/String| {
            ^foo R|/Name.f|.R|SubstitutionOverride</Foo.foo: R|kotlin/String|>|()
        }

    }
