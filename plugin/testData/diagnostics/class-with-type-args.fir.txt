FILE: class-with-type-args.kt
    public abstract class Foo<out T> : R|kotlin/Any| {
        public constructor<out T>(): R|Foo<T>| {
            super<R|kotlin/Any|>()
        }

        public abstract fun foo(): R|T|

    }
    @R|me/mrfang/transparent/Transparent|() @R|kotlin/jvm/JvmInline|() public final inline class Name : R|kotlin/Any| {
        public constructor(f: R|Foo<kotlin/String>|): R|Name| {
            super<R|kotlin/Any|>()
        }

        private final val f: R|Foo<kotlin/String>| = R|<local>/f|
            private get(): R|Foo<kotlin/String>|

        public final override fun toString(): R|kotlin/String| {
            ^toString this@R|/Name|.R|/Name.f|.R|kotlin/Any.toString|()
        }

        public final fun foo(): R|kotlin/String| {
            ^foo this@R|/Name|.R|/Name.f|.R|SubstitutionOverride</Foo.foo: R|kotlin/String|>|()
        }

    }
    public final fun main(): R|kotlin/Unit| {
        lval name: R|Name| = R|/Name.Name|(object : R|Foo<kotlin/String>| {
            private constructor(): R|<anonymous>| {
                super<R|Foo<kotlin/String>|>()
            }

            public open override fun foo(): R|kotlin/String| {
                ^foo String(foo)
            }

        }
        )
        lval s: R|kotlin/String| = R|<local>/name|.R|/Name.foo|().R|kotlin/String.plus|(String(bar))
    }
